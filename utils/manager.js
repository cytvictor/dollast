// Generated by LiveScript 1.3.1
(function(){
  var mongoose, ObjectId, db, problem, userModel, firstProb, secondProb, solModel, i$, ref$, len$, prob, lyp, firstSol;
  mongoose = require('mongoose');
  ObjectId = mongoose.Schema.Types.ObjectId;
  db = mongoose.createConnection('mongodb://localhost/dollast');
  problem = db.model('problem', {
    _id: Number,
    desc: String,
    title: String,
    timeLmt: Number,
    spaceLmt: Number,
    inFmt: String,
    outFmt: String,
    sampleIn: String,
    sampleOut: String,
    stat: {}
  });
  userModel = db.model('user', {
    _id: String,
    pswd: String
  });
  db.on('error', console.error.bind(console, 'connection error')).once('open', function(cb){
    return console.log('connection succeed...');
  });
  firstProb = new problem({
    _id: 0,
    desc: 'Given A, B output A+B',
    title: 'A+B problem',
    inFmt: 'A B',
    outFmt: 'A+B',
    timeLmt: 1,
    spaceLmt: 128,
    sampleIn: "2 3\n",
    sampleOut: "5\n"
  });
  secondProb = new problem({
    _id: 1,
    desc: 'Given A, B output A*B',
    title: 'A*B problem',
    inFmt: 'A B',
    outFmt: 'A*B',
    timeLmt: 1,
    spaceLmt: 128,
    sampleIn: "2 3\n",
    sampleOut: "6\n"
  });
  solModel = db.model('solution', {
    _id: Number,
    code: String,
    user: {
      type: String,
      ref: "user"
    },
    prob: {
      type: Number,
      ref: "problem"
    }
  });
  for (i$ = 0, len$ = (ref$ = []).length; i$ < len$; ++i$) {
    prob = ref$[i$];
    prob.save(fn$);
  }
  problem.find(function(err, all){
    var i$, len$, eg, results$ = [];
    for (i$ = 0, len$ = all.length; i$ < len$; ++i$) {
      eg = all[i$];
      results$.push(console.log("eg: " + JSON.stringify(eg.toJSON())));
    }
    return results$;
  });
  lyp = new userModel({
    _id: 'roosephu',
    pswd: 'drdrd'
  });
  /*user-model.find-by-id 'roosephu' .populate 'sol' .exec (err, lyp) ->
    console.log "adfs: #{JSON.stringify lyp}"
    # lyp.save!*/
  firstSol = new solModel({
    _id: 0,
    code: 'hello world',
    user: 'roosephu',
    prob: 0
  });
  solModel.find(function(err, all){
    var i$, len$, eg, results$ = [];
    for (i$ = 0, len$ = all.length; i$ < len$; ++i$) {
      eg = all[i$];
      results$.push(console.log("eg: " + JSON.stringify(eg.toJSON())));
    }
    return results$;
  });
  userModel.find(function(err, all){
    var i$, len$, eg, results$ = [];
    if (err) {
      return console.log('cannot find');
    }
    for (i$ = 0, len$ = all.length; i$ < len$; ++i$) {
      eg = all[i$];
      results$.push(console.log("eg: " + JSON.stringify(eg.toJSON())));
    }
    return results$;
  });
  solModel.findById(0).populate('user prob').exec(function(err, pop){
    return console.log("populated: " + JSON.stringify(pop));
  });
  function fn$(err){
    if (err) {
      return console.log('cannot save...');
    }
    return console.log('save ok...');
  }
}).call(this);
