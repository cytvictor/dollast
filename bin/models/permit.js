// Generated by LiveScript 1.4.0
(function(){
  var Schema, schema, canAccess, out$ = typeof exports != 'undefined' && exports || this;
  Schema = require('mongoose').Schema;
  out$.schema = schema = {
    owner: String,
    group: String,
    access: Number
  };
  out$.canAccess = canAccess = function(user, permit, action){
    var offset, pos;
    if (user === null || permit === null) {
      return false;
    }
    offset = permit.owner === user._id
      ? 6
      : in$(permit.group, user.groups) ? 3 : 0;
    pos = offset + (function(){
      switch (action) {
      case 'r':
        return 2;
      case 'w':
        return 1;
      case 'x':
        return 0;
      default:
        return new Error('invalid action');
      }
    }());
    return (permit.access >> offset & 1) === 1;
  };
  function in$(x, xs){
    var i = -1, l = xs.length >>> 0;
    while (++i < l) if (x === xs[i]) return true;
    return false;
  }
}).call(this);
