// Generated by LiveScript 1.3.1
(function(){
  var koa, koaJson, koaStatic, koaBodyparser, koaGenericSession, koaPassport, util, koaValidate, koaRouter, koaSend, path, fs, config, app, db, publicRouter, routers;
  koa = require('koa');
  koaJson = require('koa-json');
  koaStatic = require('koa-static');
  koaBodyparser = require('koa-bodyparser');
  koaGenericSession = require('koa-generic-session');
  koaPassport = require('koa-passport');
  util = require('util');
  koaValidate = require('koa-validate');
  koaRouter = require('koa-router');
  koaSend = require('koa-send');
  path = require('path');
  fs = require('fs');
  config = require('./config');
  app = koa();
  db = config.db = require("./db");
  if (!db) {
    logger.fatal("No Database found");
  }
  app.use(koaBodyparser({
    extendTypes: {
      json: ['application/x-javascript'],
      multipart: ['multipart/form-data']
    }
  }));
  app.use(function*(next){
    var ref$;
    console.log(this.req.method + " " + this.req.url + " " + util.inspect((ref$ = this.request) != null ? ref$.body : void 8));
    yield next;
  });
  app.keys = config.keys;
  app.use(koaGenericSession({
    cookie: {
      maxAge: 1000 * 60 * 5
    }
  }));
  require('./auth').init(db);
  app.use(koaPassport.initialize());
  app.use(koaPassport.session());
  app.use(koaJson());
  app.use(function*(next){
    var ref$, i$, len$, folders;
    (ref$ = this.session).theme || (ref$.theme = "default");
    if ((ref$ = this.method) === 'HEAD' || ref$ === 'GET') {
      for (i$ = 0, len$ = (ref$ = ["public", "theme/" + this.session.theme]).length; i$ < len$; ++i$) {
        folders = ref$[i$];
        if (yield koaSend(this, this.path, {
          index: 'index.html',
          root: path.resolve(folders)
        })) {
          return;
        }
      }
    }
    yield next;
  });
  publicRouter = new koaRouter();
  publicRouter.post('/login', function*(next){
    var cb, this$ = this;
    cb = function*(err, user, info){
      var that;
      if (that = err) {
        throw that;
      }
      if (user !== false) {
        yield this$.login(user);
        this$.body = {
          status: true
        };
      } else {
        this$.body = {
          status: false
        };
      }
    };
    yield koaPassport.authenticate('local', cb).call(this, next);
  }).get('/logout', function*(next){
    this.logout();
    this.redirect('/#/');
  });
  app.use(publicRouter.middleware());
  app.use(function*(next){
    if (true || this.req.isAuthenticated()) {
      yield next;
    } else {
      this.redirect('/login');
    }
  });
  routers = require('./routers');
  app.use(routers.privateRouter);
  console.log("Listening port 3000");
  app.listen(3000);
}).call(this);
