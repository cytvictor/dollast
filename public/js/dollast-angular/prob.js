// Generated by LiveScript 1.4.0
(function(){
  var prelude, probApp;
  prelude = require('prelude-ls');
  probApp = angular.module('dollast-prob-app', ["ngFileUpload", "dollast-crud", "ngSanitize", "ngCkeditor"]);
  probApp.controller('prob-show-ctrl', [
    "$scope", "prob-serv", "$routeParams", "$timeout", function($scope, probServ, $routeParams, $timeout){
      $scope.pid = parseInt($routeParams.pid);
      return $scope.prob = probServ.get({
        pid: $scope.pid
      }, function(){
        return $timeout(function(){
          return MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
        });
      });
    }
  ]);
  probApp.controller('prob-list-ctrl', [
    "$scope", "$routeParams", "prob-serv", "$timeout", function($scope, $routeParams, probServ, $timeout){
      $scope.probs = probServ.query();
      return $timeout(function(){
        return $('.filter.menu .item').tab();
      });
    }
  ]);
  probApp.controller('prob-stat-ctrl', [
    "$scope", "$routeParams", "prob-serv", function($scope, $routeParams, probServ){
      var pid;
      pid = $scope.pid = parseInt($routeParams.pid);
      return probServ.stat({
        pid: pid
      }, function(it){
        $scope.sols = _.sortBy(function(it){
          return it.doc.final.score;
        }, it.sols);
        return console.log($scope.sols);
      });
    }
  ]);
  probApp.controller('prob-modify-ctrl', [
    "$scope", "prob-serv", "data-serv", "$routeParams", "$sanitize", "$timeout", "$upload", function($scope, probServ, dataServ, $routeParams, $sanitize, $timeout, $upload){
      var that, method, pid, x$;
      $scope.editorOptions = {
        language: "en",
        extraPlugins: "autogrow",
        skin: 'minimalist'
      };
      $scope.judgers = ["string", "real", "strict", "custom"];
      $scope.prob = {
        config: {
          judger: "string"
        },
        outlook: {}
      };
      $timeout(function(){
        $('.ui.dropdown').dropdown();
        return $('.ui.checkbox').checkbox();
      });
      if (that = $routeParams.pid) {
        method = "modify";
        pid = parseInt(that);
        x$ = $scope.prob = probServ.get({
          pid: pid,
          mode: "total"
        });
        x$._id = pid;
      } else {
        method = "create";
        $scope.prob = probServ.nextCount(function(it){
          return it.config = {
            judger: "string"
          }, it.outlook = {
            desc: ""
          }, it;
        });
      }
      $scope.uploadFile = {
        flag: true,
        name: ""
      };
      $scope.delData = function(atom){
        var pid;
        pid = $scope.prob._id;
        dataServ['delete']({
          pid: pid,
          file: atom.input
        }, function(){
          return dataServ['delete']({
            pid: pid,
            file: atom.output
          }, function(){
            return probServ.repair({
              pid: pid
            });
          });
        });
        return $scope.prob.dataset = prelude.reject(function(it){
          return it.input === atom.input;
        }, $scope.prob.dataset);
      };
      $scope.submit = function(){
        var ref$;
        console.log($scope.prob);
        return probServ.save((ref$ = $scope.prob, ref$.method = method, ref$));
      };
      $scope.upload = function(){
        console.log($scope.uploadFile);
        return $upload.upload({
          url: "/data/" + $scope.prob._id + "/upload",
          file: $scope.uploadFile
        });
      };
      $scope.updateDatasetList = function(){
        return $scope.prob.config.dataset = dataServ.query({
          pid: $scope.prob._id
        });
      };
      $scope.select = function(judger){
        return $scope.prob.config.judger = judger;
      };
      return $scope.repair = function(){
        return probServ.repair({
          pid: $scope.prob._id
        });
      };
    }
  ]);
}).call(this);
