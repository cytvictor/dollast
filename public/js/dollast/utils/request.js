// Generated by LiveScript 1.3.1
(function(){
  var co, superagent, superagentPromise, log, genNewClientKey, getClientKey, clientSign, promise, defaultHeaders, request;
  co = require('co');
  superagent = require('superagent');
  superagentPromise = require('superagent-promise');
  log = debug('dollast:request');
  genNewClientKey = function(){
    return forge.util.bytesToHex(forge.random.getBytesSync(32));
  };
  getClientKey = function(){
    var clientKey;
    clientKey = localStorage.clientKey;
    if (!clientKey) {
      clientKey = genNewClientKey();
      localStorage.clientKey = clientKey;
    }
    return clientKey;
  };
  clientSign = function(txt){
    return txt;
  };
  promise = this.Promise || require('bluebird');
  defaultHeaders = {};
  request = function(method, url){
    var agent;
    agent = superagentPromise(superagent, promise);
    return agent(method, url).set(defaultHeaders);
  };
  request.setHeaders = function(field, value){
    var key, val, results$ = [];
    if (field === Object(field)) {
      for (key in field) {
        val = field[key];
        results$.push(defaultHeaders[key] = val);
      }
      return results$;
    } else {
      return defaultHeaders[field] = value;
    }
  };
  module.exports = request;
}).call(this);
