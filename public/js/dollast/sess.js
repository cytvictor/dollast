// Generated by LiveScript 1.3.1
var app, pubKey, RSAEnc;
app = angular.module("dollast-sess", ["dollast-crud", "angular-jwt"]);
pubKey = '-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCV8qwyGUz1mKUNyMUXIb5THUYJ\n9Xf9WgL/GC5UeVon7JKtzeWXRSCmzxlO5XD4GD8zcJ728kNfABdizPQ1HG4MFfRc\ns5vPQDiIR23dafkGODmE039aKRiTc+xxrLgx3huasFan+2yG/tiFQbXEFfAmLaal\n6FuOukBTwitq0XBdiQIDAQAB\n-----END PUBLIC KEY-----';
RSAEnc = forge.pki.publicKeyFromPem(pubKey);
app.service("user-session", [
  "site-serv", "user-serv", "jwtHelper", function(siteServ, userServ, jwtHelper){
    var sess;
    return sess = {
      loadToken: function(){
        var token, payload, e;
        token = localStorage.token;
        if (!token) {
          return;
        }
        try {
          payload = jwtHelper.decodeToken(token);
          console.log(payload);
          sess.uid = payload._id;
          return sess.priv = payload.priv;
        } catch (e$) {
          e = e$;
          return console.log(e);
        }
      },
      logout: function(){
        var ref$;
        delete localStorage.token;
        return ref$ = sess.uid, delete sess.uid, ref$;
      },
      enc: function(pswd, callback){
        return siteServ.get({
          mode: "token"
        }, function(it){
          var saltedPswd, encPswd;
          saltedPswd = it.salt + pswd;
          encPswd = forge.util.encode64(RSAEnc.encrypt(saltedPswd));
          return callback(encPswd);
        });
      },
      login: function(uid, pswd){
        return sess.enc(pswd, function(it){
          return siteServ.login({
            _id: uid,
            pswd: it
          }, function(it){
            console.log(it);
            localStorage.token = it.token;
            return sess.loadToken();
          });
        });
      },
      register: function(uid, pswd){
        return sess.enc(pswd, function(it){
          return userServ.reg({
            uid: uid,
            pswd: it
          }, function(it){
            return console.log(it);
          });
        });
      }
    };
  }
]);