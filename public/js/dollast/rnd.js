// Generated by LiveScript 1.3.1
var _, app, fmtResults;
_ = require('prelude-ls');
app = angular.module('dollast-rnd-app', ["dollast-crud", "ui.dateTimeInput"]);
app.controller('rnd-list-ctrl', [
  "$scope", "rnd-serv", "$routeParams", "$timeout", function($scope, rndServ, $routeParams, $timeout){
    $scope.rounds = rndServ.query();
    return $timeout(function(){
      return $('.ui.checkbox').checkbox();
    });
  }
]);
app.controller('rnd-show-ctrl', [
  "$scope", "rnd-serv", "$routeParams", "$timeout", function($scope, rndServ, $routeParams, $timeout){
    var rid;
    rid = parseInt($routeParams.rid);
    $scope.state = {
      cls: "striped",
      sty: {
        width: "0%"
      }
    };
    $scope.rnd = rndServ.get({
      rid: rid
    }, function(it){
      var bef, aft;
      bef = moment().toDate() - moment(it.begTime);
      aft = moment().toDate() - moment(it.endTime);
      $scope.started = bef >= 0;
      $scope.ended = aft >= 0;
      if ($scope.ended) {
        return $scope.state = {
          cls: "successful",
          sty: {
            width: "100%"
          }
        };
      } else if ($scope.started) {
        return $scope.state = {
          cls: "active",
          sty: {
            width: 100 * bef / (bef - aft) + "%"
          }
        };
      }
    });
    $timeout(function(){
      return $('.filter.menu .item').tab();
    });
    return $scope.publish = function(){
      return rndServ.get({
        rid: rid,
        mode: "publish"
      });
    };
  }
]);
app.controller('rnd-modify-ctrl', [
  "$scope", "rnd-serv", "prob-serv", "$routeParams", function($scope, rndServ, probServ, $routeParams){
    var that;
    $scope.pid = 0;
    if (that = $routeParams.rid) {
      $scope.rnd = rndServ.get({
        rid: that,
        mode: "total"
      }, function(it){
        return $scope.probs = it.probs;
      });
    } else {
      rndServ.nextCount(function(it){
        $scope.rnd = {
          _id: it._id,
          begTime: new Date(Date.now()),
          endTime: new Date(Date.now())
        };
        return $scope.probs = [];
      });
    }
    $scope.submit = function(){
      var rid;
      console.log($scope.rnd);
      rid = $scope.rnd._id;
      $scope.rnd.probs = _.map(function(it){
        return it._id;
      }, $scope.probs);
      return rndServ.save($scope.rnd);
    };
    $scope.insert = function(){
      return probServ.get({
        pid: $scope.pid,
        mode: "brief"
      }, function(it){
        console.log(it);
        if (it._id) {
          return $scope.probs.push(it);
        } else {
          throw Error('unimplemented');
        }
      });
    };
    $scope.remove = function(pid){
      return $scope.probs = _.reject(function(it){
        return it._id === pid;
      }, $scope.probs);
    };
    return $scope['delete'] = function(){
      return rndServ['delete']({
        rid: $scope.rnd._id
      });
    };
  }
]);
fmtResults = function(sols){
  var results, i$, len$, sol, ref$, user, prob, cur, value;
  results = {};
  for (i$ = 0, len$ = sols.length; i$ < len$; ++i$) {
    sol = sols[i$];
    ref$ = sol._id, user = ref$.user, prob = ref$.prob;
    results[user] || (results[user] = {});
    (ref$ = results[user])[prob] || (ref$[prob] = {});
    cur = results[user][prob];
    if (cur._id == null || cur._id < sol.sid) {
      cur._id = sol.sid;
      cur.score = sol.score;
    }
  }
  for (user in results) {
    value = results[user];
    results[user].total = _.sum(
    _.map(fn$)(
    _.values(
    value)));
  }
  return results;
  function fn$(it){
    return it.score;
  }
};
app.controller('rnd-board-ctrl', [
  "$scope", "rnd-serv", "$routeParams", function($scope, rndServ, $routeParams){
    var rid;
    rid = parseInt($routeParams.rid);
    rndServ.board({
      rid: rid
    }, function(it){
      return $scope.board = fmtResults(it);
    });
    return $scope.rnd = rndServ.get({
      rid: rid
    });
  }
]);