// Generated by LiveScript 1.4.0
(function(){
  var createClass, classnames, iconText, moment, probFmt, codeLink, probLink, rndLink, userLink, roundTime, out$ = typeof exports != 'undefined' && exports || this;
  createClass = require('react').createClass;
  classnames = require('classnames');
  iconText = require('./elements').iconText;
  moment = require('moment');
  out$.probFmt = probFmt = function(prob){
    return prob._id + ". " + prob.outlook.title;
  };
  out$.codeLink = codeLink = createClass({
    displayName: 'code',
    render: function(){
      var className;
      className = classnames(this.props.className, 'ui label grey');
      return _('a', {
        className: className,
        href: "#/solution/" + this.props.sid
      }, this.props.text || this.props.sid + "");
    }
  });
  out$.probLink = probLink = createClass({
    displayName: 'problem',
    render: function(){
      var className, id, title;
      className = classnames(this.props.className, 'ui label green');
      id = this.props.prob._id;
      if (id > 0) {
        title = this.props.prob.outlook.title;
        return _('a', {
          className: className,
          href: "#/problem/" + id
        }, id + ". " + title);
      } else {
        return _('a', {
          className: className
        }, 'hidden');
      }
    }
  });
  out$.rndLink = rndLink = createClass({
    displayName: 'round',
    render: function(){
      var className, text;
      className = classnames(this.props.className, 'ui label light teal');
      if (this.props.noTitle === true) {
        text = this.props.rnd._id + "";
      } else {
        text = this.props.rnd._id + ". " + this.props.rnd.title;
      }
      return _('a', {
        className: className,
        href: "#/round/" + this.props.rnd._id
      }, text);
    }
  });
  out$.userLink = userLink = createClass({
    displayName: 'user',
    render: function(){
      var className;
      className = classnames(this.props.className, 'ui label');
      return _('a', {
        className: className,
        href: "#/user/" + this.props.user
      }, this.props.user + "");
    }
  });
  out$.roundTime = roundTime = createClass({
    displayName: 'round-time',
    render: function(){
      var style;
      style = moment().isBefore(this.props.begTime)
        ? 'green'
        : moment().isAfter(this.props.endTime) ? 'grey' : 'red';
      return _('div', null, " from ", _('div', {
        className: "ui label " + style
      }, moment(this.props.begTime).format('YYYY-MM-DD hh:mm:ss')), " to ", _('div', {
        className: "ui label " + style
      }, moment(this.props.endTime).format('YYYY-MM-DD hh:mm:ss')));
    }
  });
}).call(this);
