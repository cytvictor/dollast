// Generated by LiveScript 1.4.0
(function(){
  var createClass, connect, ref$, iconText, loadingSegment, probLink, roundTime, onGetRound, fromJS, classnames, log, selector;
  createClass = require('react').createClass;
  connect = require('react-redux').connect;
  ref$ = require('../elements'), iconText = ref$.iconText, loadingSegment = ref$.loadingSegment;
  ref$ = require('../format'), probLink = ref$.probLink, roundTime = ref$.roundTime;
  onGetRound = require('../../actions').onGetRound;
  fromJS = require('immutable').fromJS;
  classnames = require('classnames');
  log = debug('dollast:component:round:show');
  selector = function(state, props){
    return {
      round: state.getIn(['db', 'round', props.params.rid, 'get'], fromJS({
        probs: [],
        begTime: "1960-01-01 00:00:00",
        endTime: "1960-01-01 00:00:00",
        status: 'init'
      })),
      status: state.getIn(['status', 'round', props.params.rid, 'get'], 'init')
    };
  };
  module.exports = connect(selector)(createClass({
    displayName: 'rnd-show',
    componentDidMount: function(){
      var rid;
      rid = this.props.params.rid;
      return this.props.dispatch(onGetRound(rid, 'show'));
    },
    render: function(){
      var rnd, prob;
      rnd = this.props.round.toJS();
      return _('div', null, _('h1', {
        className: "ui dividing header"
      }, "Round " + rnd._id + ". " + rnd.title), _(roundTime, {
        begTime: rnd.begTime,
        endTime: rnd.endTime
      }), _('br'), rnd.started
        ? _('div', null, _('h2', {
          className: "ui dividing header"
        }, 'Problemset'), _(loadingSegment, {
          status: this.props.status
        }, _('div', {
          className: "ui relaxed divided link list"
        }, (function(){
          var i$, ref$, len$, results$ = [];
          for (i$ = 0, len$ = (ref$ = rnd.probs).length; i$ < len$; ++i$) {
            prob = ref$[i$];
            results$.push(_('div', {
              className: "item",
              key: prob._id
            }, _('div', {
              className: "ui right floated"
            }, "??"), _('div', {
              className: 'description'
            }, _(probLink, {
              prob: prob
            }))));
          }
          return results$;
        }()))), _('br'))
        : _('p', "Sorry, this round has not started."), _('div', null, rnd.started ? _(iconText, {
        className: 'purple',
        text: 'board',
        icon: 'trophy',
        href: "#/round/" + rnd._id + "/board"
      }) : void 8, _(iconText, {
        className: 'orange',
        icon: 'edit',
        text: 'modify',
        href: "#/round/" + rnd._id + "/modify"
      })));
    }
  }));
}).call(this);
