// Generated by LiveScript 1.4.0
(function(){
  var createClass, connect, ref$, iconText, iconInput, onRegister, onSetUi, classnames, log, selector;
  createClass = require('react').createClass;
  connect = require('react-redux').connect;
  ref$ = require('../elements'), iconText = ref$.iconText, iconInput = ref$.iconInput;
  ref$ = require('../../actions'), onRegister = ref$.onRegister, onSetUi = ref$.onSetUi;
  classnames = require('classnames');
  log = debug('dollast:component:login');
  selector = function(state){
    return {
      response: state.getIn(['db', 'user', 'register', 'post'], I.Map({
        type: 'register',
        payload: 'success'
      }))
    };
  };
  module.exports = connect()(createClass({
    displayName: 'register',
    componentDidMount: function(){
      return $('#register-form').form({
        on: 'blur',
        fields: {
          uid: {
            identifier: 'uid',
            rules: [
              {
                type: 'minLength[3]',
                prompt: "User name must be longer than 5"
              }, {
                type: 'maxLength[16]',
                prompt: "User name must be shorter than 15"
              }
            ]
          },
          pswd: {
            identifier: 'pswd',
            rules: [{
              type: 'isPassword',
              prompt: 'password length must be longer than 5'
            }]
          },
          email: {
            identifier: 'email',
            rules: [{
              type: 'email',
              prompt: 'please enter a valid email address'
            }]
          }
        },
        onSuccess: this.submit,
        debug: true
      });
    },
    submit: function(e){
      var $form, allValues;
      e.preventDefault();
      $form = $('#register-form');
      allValues = $form.form('get values');
      return this.props.dispatch(onRegister(allValues));
    },
    render: function(){
      var classes;
      classes = classnames("ui form segment");
      return _('div', {
        className: "ui"
      }, _('h1', {
        className: "ui dividing header"
      }, "Register"), _('form', {
        className: classes,
        id: "register-form"
      }, _('div', {
        className: "ui error message"
      }), _('div', {
        className: "ui success message"
      }, "Register successful. Login please."), _('div', {
        className: "ui field"
      }, _(iconInput, {
        className: "left",
        icon: 'user',
        input: {
          placeholder: "user id",
          name: "uid"
        }
      })), _('div', {
        className: "ui field"
      }, _(iconInput, {
        className: "left",
        icon: 'lock',
        input: {
          placeholder: 'password',
          name: "pswd",
          type: 'password'
        }
      })), _('div', {
        className: "field"
      }, _(iconInput, {
        className: "left",
        icon: 'mail',
        input: {
          placeholder: "abc@xyz",
          name: 'email',
          type: 'email'
        }
      })), _(iconText, {
        className: "left primary labeled submit",
        icon: "sign in",
        text: 'Register'
      })));
    }
  }));
}).call(this);
